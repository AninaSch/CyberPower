crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) + geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = "Cyber Capability Index" , y = "Cyber Intent Index") +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.20), limits = c(0,1), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 20), limits = c(0,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n HIgher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=85, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=15, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=85, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=15, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
ggsave(p_quad, file = "../../findings/Quad_Cap_Intent.pdf")
p_quad
p_quad <- CPI_quadrant %>%
mutate(quadrant = case_when(score_capabilities > x_mid & score_intent > y_mid   ~ "High Capability &\n High Intent",
score_capabilities <= x_mid & score_intent > y_mid  ~ "Low Capability &\n High Intent",
score_capabilities <= x_mid & score_intent <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = score_capabilities, y = score_intent, label = CPI_quadrant$country, color = quadrant)) +
# ggplot(aes(x = score_capabilities, y = score_intent, color = quadrant, label = CPI_quadrant$country, size=pop)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) + geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = "Cyber Capability Index" , y = "Cyber Intent Index") +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.20), limits = c(0,1), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 20), limits = c(0,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n HIgher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=90, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=10, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=90, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=10, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
ggsave(p_quad, file = "../../findings/Quad_Cap_Intent.pdf")
p_quad
#### FUNCTION
CPI_quadrant <- CPI_scores %>%
select(country, pop, score_capabilities, score_intent,
score_surveillance, score_defense, score_control, score_intelligence, score_commercial, score_offense, score_norms,
intent_surveillance, intent_defense, intent_control, intent_intelligence, intent_commercial, intent_offense, intent_norms)
# %>%
#   mutate(quadrant = case_when(score_capabilities > x_mid & score_intent > y_mid   ~ "High Capability &\n High Intent",
#                               score_capabilities <= x_mid & score_intent > y_mid  ~ "Low Capability &\n High Intent",
#                               score_capabilities <= x_mid & score_intent <= y_mid ~ "Low Capability &\n Low Intent",
#                               TRUE                                         ~ "High Capability &\n Low Intent"))
x_mid <- mean(c(max(CPI_quadrant$score_capabilities, na.rm = TRUE),
min(CPI_quadrant$score_capabilities, na.rm = TRUE)))
y_mid <- mean(c(max(CPI_quadrant$score_intent, na.rm = TRUE),
min(CPI_quadrant$score_intent, na.rm = TRUE)))
my_palette <- c( "#4db848", "#4e88c7", "#fcb315", "#ed1b34")
intent_times_capab <-   function (.data, ...) {
.data  %>%
mutate(quadrant = case_when(.data[[capabilities]] > x_mid & .data[[intent]] > y_mid   ~ "High Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] > y_mid  ~ "Low Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = .data[[capabilities]], y =  .data[[intent]], label = .data[[label]] , color = quadrant)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) +
geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = labs_x , y = labs_y) +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.10), limits = c(0,1), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits = c(0,100), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n Higher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=90, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=10, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=90, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=10, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
}
#### SURVEILLANCE
capabilities = "score_surveillance"
intent = "intent_surveillance"
labs_x = "Surveillance Capability Score"
labs_y =  "Surveillance Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_surveillance <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_surveillance
#### FUNCTION
CPI_quadrant <- CPI_scores %>%
select(country, pop, score_capabilities, score_intent,
score_surveillance, score_defense, score_control, score_intelligence, score_commercial, score_offense, score_norms,
intent_surveillance, intent_defense, intent_control, intent_intelligence, intent_commercial, intent_offense, intent_norms)
# %>%
#   mutate(quadrant = case_when(score_capabilities > x_mid & score_intent > y_mid   ~ "High Capability &\n High Intent",
#                               score_capabilities <= x_mid & score_intent > y_mid  ~ "Low Capability &\n High Intent",
#                               score_capabilities <= x_mid & score_intent <= y_mid ~ "Low Capability &\n Low Intent",
#                               TRUE                                         ~ "High Capability &\n Low Intent"))
x_mid <- mean(c(max(CPI_quadrant$score_capabilities, na.rm = TRUE),
min(CPI_quadrant$score_capabilities, na.rm = TRUE)))
y_mid <- mean(c(max(CPI_quadrant$score_intent, na.rm = TRUE),
min(CPI_quadrant$score_intent, na.rm = TRUE)))
my_palette <- c( "#4db848", "#4e88c7", "#fcb315", "#ed1b34")
intent_times_capab <-   function (.data, ...) {
.data  %>%
mutate(quadrant = case_when(.data[[capabilities]] > x_mid & .data[[intent]] > y_mid   ~ "High Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] > y_mid  ~ "Low Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = .data[[capabilities]], y =  .data[[intent]], label = .data[[label]] , color = quadrant)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) +
geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = labs_x , y = labs_y) +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.10), limits = c(0,1), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits = c(0,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n Higher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=90, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=10, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=90, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=10, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
}
#### SURVEILLANCE
capabilities = "score_surveillance"
intent = "intent_surveillance"
labs_x = "Surveillance Capability Score"
labs_y =  "Surveillance Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_surveillance <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_surveillance
#### DEFENSE
capabilities = "score_defense"
intent = "intent_defense"
labs_x = "Defense Capability Score"
labs_y =  "Defense Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_defense <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_defense
#### INFORMATION CONTROL
capabilities = "score_control"
intent = "intent_control"
labs_x = "Info Control Capability Score"
labs_y =  "Info Control Intent Score"
label = "country"
quadrant = "quandrant"
my_palette <- c("#4db848", "#fcb315", "#ed1b34")
p_quad_control <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_control
#### INTELLIGENCE
capabilities = "score_intelligence"
intent = "intent_intelligence"
labs_x = "Intelligence Capability Score"
labs_y =  "Intelligence Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_intel <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_intel
#### INTELLIGENCE
capabilities = "score_intelligence"
intent = "intent_intelligence"
labs_x = "Intelligence Capability Score"
labs_y =  "Intelligence Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_intel <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_intel
my_palette <- c( "#4db848", "#4e88c7", "#fcb315", "#ed1b34")
p_quad_intel <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_intel
intent_times_capab <-   function (.data, ...) {
.data  %>%
mutate(quadrant = case_when(.data[[capabilities]] > x_mid & .data[[intent]] > y_mid   ~ "High Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] > y_mid  ~ "Low Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = .data[[capabilities]], y =  .data[[intent]], label = .data[[label]] , color = quadrant)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) +
geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = labs_x , y = labs_y) +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.10), limits = c(-0.7,1.3), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits = c(-0.7,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n Higher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=90, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=10, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=90, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=10, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
}
#### INTELLIGENCE
capabilities = "score_intelligence"
intent = "intent_intelligence"
labs_x = "Intelligence Capability Score"
labs_y =  "Intelligence Intent Score"
label = "country"
quadrant = "quandrant"
my_palette <- c( "#4db848", "#4e88c7", "#fcb315", "#ed1b34")
p_quad_intel <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_intel
intent_times_capab <-   function (.data, ...) {
.data  %>%
mutate(quadrant = case_when(.data[[capabilities]] > x_mid & .data[[intent]] > y_mid   ~ "High Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] > y_mid  ~ "Low Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = .data[[capabilities]], y =  .data[[intent]], label = .data[[label]] , color = quadrant)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) +
geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = labs_x , y = labs_y) +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.10), limits = c(-0.03,1.03), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits = c(-3,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n Higher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=90, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=10, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=90, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=10, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
}
#### INTELLIGENCE
capabilities = "score_intelligence"
intent = "intent_intelligence"
labs_x = "Intelligence Capability Score"
labs_y =  "Intelligence Intent Score"
label = "country"
quadrant = "quandrant"
my_palette <- c( "#4db848", "#4e88c7", "#fcb315", "#ed1b34")
p_quad_intel <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_intel
#### COMMERCE
capabilities = "score_commercial"
intent = "intent_commercial"
labs_x = "Commerce Capability Score"
labs_y =  "Commerce Intent Score"
label = "country"
quadrant = "quandrant"
my_palette <- c( "#4e88c7", "#fcb315", "#ed1b34")
p_quad_commerce <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_commerce
#### OFFENSE
capabilities = "score_offense"
intent = "intent_offense"
labs_x = "Offense Capability Score"
labs_y =  "Offense Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_offense <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_offense
my_palette <- c( "#4db848", "#4e88c7", "#fcb315", "#ed1b34")
p_quad_offense <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
p_quad_offense
#### NORMS
capabilities = "score_norms"
intent = "intent_norms"
labs_x = "Norms Capability Score"
labs_y =  "Norms Intent Score"
label = "country"
quadrant = "quandrant"
my_palette <- c("#4db848", "#fcb315", "#ed1b34")
p_quad_norms <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
ggsave(p_quad_norms, file = "../../findings/Quad_Cap_Intent_norms.pdf")
p_quad_norms
#### SURVEILLANCE
capabilities = "score_surveillance"
intent = "intent_surveillance"
labs_x = "Surveillance Capability Score"
labs_y =  "Surveillance Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_surveillance <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
ggsave(p_quad_surveillance, file = "../../findings/Quad_Cap_Intent_surveillance.pdf", width = 17, height = 12, dpi = 150, units = "in", device='png')
#### FUNCTION
CPI_quadrant <- CPI_scores %>%
select(country, pop, score_capabilities, score_intent,
score_surveillance, score_defense, score_control, score_intelligence, score_commercial, score_offense, score_norms,
intent_surveillance, intent_defense, intent_control, intent_intelligence, intent_commercial, intent_offense, intent_norms)
# %>%
#   mutate(quadrant = case_when(score_capabilities > x_mid & score_intent > y_mid   ~ "High Capability &\n High Intent",
#                               score_capabilities <= x_mid & score_intent > y_mid  ~ "Low Capability &\n High Intent",
#                               score_capabilities <= x_mid & score_intent <= y_mid ~ "Low Capability &\n Low Intent",
#                               TRUE                                         ~ "High Capability &\n Low Intent"))
x_mid <- mean(c(max(CPI_quadrant$score_capabilities, na.rm = TRUE),
min(CPI_quadrant$score_capabilities, na.rm = TRUE)))
y_mid <- mean(c(max(CPI_quadrant$score_intent, na.rm = TRUE),
min(CPI_quadrant$score_intent, na.rm = TRUE)))
my_palette <- c( "#4db848", "#4e88c7", "#fcb315", "#ed1b34")
intent_times_capab <-   function (.data, ...) {
.data  %>%
mutate(quadrant = case_when(.data[[capabilities]] > x_mid & .data[[intent]] > y_mid   ~ "High Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] > y_mid  ~ "Low Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = .data[[capabilities]], y =  .data[[intent]], label = .data[[label]] , color = quadrant)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) +
geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = labs_x , y = labs_y) +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.10), limits = c(-0.03,1.03), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits = c(-3,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n Higher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=90, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=10, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=90, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=10, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
}
#### OBJECTIVES
#### SURVEILLANCE
capabilities = "score_surveillance"
intent = "intent_surveillance"
labs_x = "Surveillance Capability Score"
labs_y =  "Surveillance Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_surveillance <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
ggsave(p_quad_surveillance, file = "../../findings/Quad_Cap_Intent_surveillance.pdf", width = 17, height = 12, dpi = 150, units = "cm", device='png')
ggsave(p_quad_surveillance, file = "../../findings/Quad_Cap_Intent_surveillance.png", width = 17, height = 12, dpi = 150, units = "cm", device='png')
ggsave(p_quad_surveillance, file = "../../findings/Quad_Cap_Intent_surveillance.pdf", width = 17, height = 12, device='pdf')
intent_times_capab <-   function (.data, ...) {
.data  %>%
mutate(quadrant = case_when(.data[[capabilities]] > x_mid & .data[[intent]] > y_mid   ~ "High Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] > y_mid  ~ "Low Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = .data[[capabilities]], y =  .data[[intent]], label = .data[[label]] , color = quadrant)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) +
geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = labs_x , y = labs_y) +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.10), limits = c(-0.03,1.03), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits = c(-3,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n Higher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=95, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=5, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=95, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=5, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
}
#### OBJECTIVES
#### SURVEILLANCE
capabilities = "score_surveillance"
intent = "intent_surveillance"
labs_x = "Surveillance Capability Score"
labs_y =  "Surveillance Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_surveillance <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
ggsave(p_quad_surveillance, file = "../../findings/Quad_Cap_Intent_surveillance.pdf", width = 17, height = 12, device='pdf')
intent_times_capab <-   function (.data, ...) {
.data  %>%
mutate(quadrant = case_when(.data[[capabilities]] > x_mid & .data[[intent]] > y_mid   ~ "High Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] > y_mid  ~ "Low Capability &\n High Intent",
.data[[capabilities]] <= x_mid & .data[[intent]] <= y_mid ~ "Low Capability &\n Low Intent",
TRUE                                         ~ "High Capability &\n Low Intent")) %>%
ggplot(aes(x = .data[[capabilities]], y =  .data[[intent]], label = .data[[label]] , color = quadrant)) +
geom_vline(xintercept = x_mid) + # plot vertical line
geom_hline(yintercept = y_mid) + # plot horizontal line
geom_point() +
crimson_theme() +
theme_minimal() +
theme(axis.title = element_text(size = 15)) +
geom_point(aes(),size=3) +
geom_text_repel(aes(), hjust = -0.10, nudge_x = 0.05, color="black") +
ggtitle("") +
labs(x = labs_x , y = labs_y) +
theme(legend.position="bottom") +
scale_y_continuous(breaks = seq(0, 1, by = 0.10), limits = c(-0.03,1.03), expand = c(0,0)) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits = c(-3,103), expand = c(0,0)) +
scale_color_manual(values = my_palette, name = "Quadrant",
labels = c("Higher Capability &\n Higher Intent","Higher Capability &\n Lower Intent", "Lower Capability &\n Higher Intent", "Lower Capability &\n Lower Intent")) +
annotate("text", x=90, y=0.95, label= "Higher Capability &\n Higher Intent", size=6, color="#4db848", fontface = 'bold') +
annotate("text", x=10, y=0.95, label= "Lower Capability &\n Higher Intent", size=6, color="#fcb315", fontface = 'bold') +
annotate("text", x=90, y=0.05, label= "Higher Capability &\n Lower Intent", size=6, color="#4e88c7", fontface = 'bold') +
annotate("text", x=10, y=0.05, label= "Lower Capability &\n Lower Intent", size=6, color="#ed1b34", fontface = 'bold')  +
guides(color = FALSE)
}
#### OBJECTIVES
#### SURVEILLANCE
capabilities = "score_surveillance"
intent = "intent_surveillance"
labs_x = "Surveillance Capability Score"
labs_y =  "Surveillance Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_surveillance <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
ggsave(p_quad_surveillance, file = "../../findings/Quad_Cap_Intent_surveillance.pdf", width = 17, height = 12, device='pdf')
#### DEFENSE
capabilities = "score_defense"
intent = "intent_defense"
labs_x = "Defense Capability Score"
labs_y =  "Defense Intent Score"
label = "country"
quadrant = "quandrant"
p_quad_defense <- CPI_quadrant %>%  intent_times_capab(capabilities, intent, labs_x, labs_y, label, quadrant)
ggsave(p_quad_defense, file = "../../findings/Quad_Cap_Intent_defense.pdf", width = 17, height = 12)
setwd("~/Documents/GitHub/CyberPower/scripts/exploratory_analysis")
knitr::opts_chunk$set(echo = FALSE)
# load packages:
library(tidyverse) # ggplot2, tidyr, ...
library(GGally)
library(ggrepel)
library(ggcorrplot)
# load data
CPI_scores <- readRDS("../../data/data_for_modelling/CPI_scores.rds") %>%
filter(country != "North Korea") # remove North Korea for now because of missing information
# Define color palette:
# order: black, female, male, other, highlight
my_palette <- c("#383D3B", "#52DEE5", "#B3B3F1", "#FF220C", "#BEEF9E")
# my_palette <- c(
#   `black` = "#383D3B",
#   `male` = "#52DEE5",
#   `female` = "#B3B3F1",
#   `highlight` = "#FF220C",
#   `other` = "#BEEF9E")
crimson_theme <- function() {
# font <- "Georgia"   #assign font family up front
theme_minimal() %+replace%    #replace elements we want to change
theme(
# add border 1)
panel.border = element_rect(colour = "blue", fill = NA, linetype = 2),
# color background 2)
panel.background = element_rect(fill = "aliceblue"),
# modify grid 3)
panel.grid.major.x = element_line(colour = "#A51C30", linetype = 3, size = 0.5),
panel.grid.minor.x = element_blank(),
panel.grid.major.y =  element_line(colour = "#A51C30", linetype = 3, size = 0.5),
panel.grid.minor.y = element_blank(),
# modify text, axis and colour 4) and 5)
# axis.text = element_text(colour = "black", face = "italic", family = "Times New Roman"),
# axis.title = element_text(colour = "black", family = "Times New Roman"),
axis.ticks = element_line(colour = "black"),
# legend at the bottom 6)
legend.position = "bottom"
)
}
CPI_scores %>%
ggpairs(columns = c("laws", "attack_surveillance", "freedom_net", "surveillance_firm", "socials_use", "internet_use"))
ggcorr(CPI_scores[, c("laws", "attack_surveillance", "freedom_net", "surveillance_firm", "socials_use", "internet_use")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI_scores %>%
ggpairs(columns = c("laws", "attack_surveillance", "freedom_net", "surveillance_firm", "socials_use", "internet_use"))
ggcorr(CPI_scores[, c("laws", "attack_surveillance", "freedom_net", "surveillance_firm", "socials_use", "internet_use")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI_scores %>%
ggpairs(columns = c("laws", "shodan",  "human_capital", "cyber_firm", "computer_infection", "mobile_infection", "internet_use", "broadband_speed", "mobile_speed", "infocomm_imp", "CERTS"))
ggcorr(CPI_scores[, c("laws", "shodan",  "human_capital", "cyber_firm", "computer_infection", "mobile_infection", "internet_use", "broadband_speed", "mobile_speed", "infocomm_imp", "CERTS")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI_scores %>%
ggpairs(columns = c("attack_control", "internet_use", "socials_use", "news_alexa", "web_alexa", "removal_google"))
ggcorr(CPI_scores[, c("attack_control", "internet_use", "socials_use", "news_alexa", "web_alexa", "removal_google")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI_scores %>%
ggpairs(columns = c("attack_intelligence", "tech_export", "human_capital", "cybermil_people", "tech_firm", "surveillance_firm"))
ggcorr(CPI_scores[, c("attack_intelligence", "tech_export", "human_capital", "cybermil_people", "tech_firm", "surveillance_firm")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI_scores %>%
ggpairs(columns = c("attack_commercial", "tech_firm", "human_capital", "cyber_firm", "web_alexa", "ecommerce_capita", "tech_export", "infocomm_imp", "patent_app_capita"))
ggcorr(CPI_scores[, c("attack_commercial", "tech_firm", "human_capital", "cyber_firm", "web_alexa", "ecommerce_capita", "tech_export", "infocomm_imp", "patent_app_capita")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI_scores %>%
ggpairs(columns = c("attack_offense", "tech_export", "cybermil_people", "military_strategy", "cyber_command"))
ggcorr(CPI_scores[, c("attack_offense", "tech_export", "cybermil_people", "military_strategy", "cyber_command")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI_scores %>%
ggpairs(columns = c("laws", "muli_agreement", "bilat_agreement", "infocomm_imp", "tech_firm", "tech_export", "softpower"))
ggcorr(CPI_scores[, c("laws", "muli_agreement", "bilat_agreement", "infocomm_imp", "tech_firm", "tech_export", "softpower")], method = c("pairwise", "spearman"), label=T, hjust = 0.75, size = 3, color = "grey50")
