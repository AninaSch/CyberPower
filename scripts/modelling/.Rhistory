??cor
cor(CPI, c(3, 5, 6:12), method = c("pearson"))
# -------------- DATA IMPORT
CPI <- readRDS("../../data/data_for_modelling/CPI_2020.rds") %>%
filter(country != "North Korea") # remove North Korea for now because of missing information
setwd("~/Documents/GitHub/CyberPower/scripts/modelling")
rm(list=ls())
# --- 0. Setup
library(tidyverse)
library(foreign)
library(dplyr)
library(Compind)
library(xtable)
# -------------- DATA IMPORT
CPI <- readRDS("../../data/data_for_modelling/CPI_2020.rds") %>%
filter(country != "North Korea") # remove North Korea for now because of missing information
cor(CPI, c(3, 5, 6:12), method = c("pearson"))
install.packages("GGally")
library(ggplot2)
ggcorr(nba)
library(GGally)
ggcorr(nba)
ggcorr(CPI)
ggcorr(matrix(runif(5), 2, 5))
ggcorr(data = NULL, cor_matrix = cor(CPI[, -1], use = "everything"))
ggcorr(CPI [, -1])
ggcorr(data = NULL, cor_matrix = cor(CPI[, -1], use = "everything"))
ggcorr(nba[, -1], method = c("pairwise", "pearson")
ggcorr(CPI[, -1], method = c("pairwise", "pearson"))
ggcorr(CPI[, -1], method = c("pairwise", "pearson"))
ggcorr(CPI[, 2:15], geom = "circle", nbreaks = 5)
ggcorr(CPI[, 2:15], geom = "circle", nbreaks = 5, , min_size = 0, max_size = 6)
ggcorr(CPI[, 2:15], geom = "circle", nbreaks = 5, , min_size = 0, max_size = 6))
ggcorr(CPI[, 2:15], geom = "circle", nbreaks = 5, min_size = 0, max_size = 6)
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T)
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 5, color = "grey50")
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T, hjust = 0.65, size = 2, color = "grey50")
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T, hjust = 0.65, size = 3, color = "grey50")
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T, hjust = 0.5, size = 3, color = "grey50")
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
View(CPI)
# CORRELATION DATASET
# http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization
data(CPI)
# -------------- DATA IMPORT
CPI <- readRDS("../../data/data_for_modelling/CPI_2020.rds") %>%
filter(country != "North Korea") # remove North Korea for now because of missing information
# CORRELATION DATASET
# http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization
data(CPI)
corr <- round(cor(CPI), 1)
head(corr[, -1])
View(CPI)
# CORRELATION DATASET
# http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization
data(CPI, package = "foreign")
# CORRELATION DATASET
# http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization
data("CPI")
head(CPI, 6)
# CORRELATION DATASET
http://www.sthda.com/english/wiki/correlation-matrix-a-quick-start-guide-to-analyze-format-and-visualize-a-correlation-matrix-using-r-software
res <- cor(CPI)
round(res, 2)
res <- cor(CPI)
res <- cor(CPI[, -1])
round(res, 2)
install.packages("Hmisc")
library(Hmisc)
res2 <- rcorr(as.matrix(CPI[, -1])
res2 <- rcorr(as.matrix(CPI[, -1]))
res2
View(res2)
View(res)
View(res2)
res2$r
# Extract p-values
res2$P
res2 <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
# Compute a correlation matrix
corr <- round(cor(CPI), 1)
# Compute a correlation matrix
corr <- round(cor(CPI[, -1]), 1)
head(corr[, 1:6])
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(CPI[, -1])
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
# Compute a matrix of correlation p-values
p.mat <- cor_pmat(CPI[, -1])
head(p.mat[, 1:4])
CPI.cor <- cor(CPI)
CPI.cor <- cor(CPI[, -1])
View(CPI.cor)
CPI.rcor <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.rcor <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
View(CPI.p)
rm(list=ls())
library(tidyverse)
library(foreign)
library(dplyr)
library(Compind)
library(xtable)
library(ggplot2)
library(GGally)
library(Hmisc)
library(ggcorrplot)
# -------------- DATA IMPORT
CPI <- readRDS("../../data/data_for_modelling/CPI_2020.rds") %>%
filter(country != "North Korea") # remove North Korea for now because of missing information
View(CPI)
glimpse(CPI)
ggcorr(CPI[, 2:15], geom = "circle", method = c("pairwise", "pearson"), nbreaks = 5, min_size = 0, max_size = 6)
ggcorr(CPI[, 2:15], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
CPI.cor <- cor(CPI[, -1], method = c("spearman"))
View(CPI.cor)
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
View(CPI.cor)
data_norm = normalise_ci(CPI,c(3, 5, 6:12),c("POS","POS","NEG","POS","POS","POS","POS","POS", "POS"),method=1,z.mean=0, z.std=1)
summary(data_norm$ci_norm)
# Standard z-scores normalisation with restricted number of indicators
data_norm = normalise_ci(CPI,c(3, 5, 6:14),c("POS","POS","NEG","POS","POS","POS","POS","POS","POS","POS","POS"),method=1,z.mean=0, z.std=1)
summary(data_norm$ci_norm)
# Benefit of the Doubt approach
CI1 = ci_bod(data_norm$ci_norm,c(1:12))
# Benefit of the Doubt approach
CI1 = ci_bod(data_norm$ci_norm,c(1:11))
CPI_CI = data.frame(CPI, CI1_est= CI1$ci_bod_est)
ggplot(data = CPI_CI, aes(x = removal_google, y = freedom_net)) +
geom_point(aes(colour = CI_est),size=3)
ggplot(data = CPI_CI, aes(x = removal_google, y = freedom_net)) +
geom_point(aes(colour = CI1_est),size=3)
View(CPI_CI)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports)) +
geom_point(aes(colour = CI1_est),size=3)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports)) +
geom_point(aes(colour = CI1_est),size=3) + geom(text)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text()
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = rownames(CPI_CI))) +
geom_point(aes(colour = CI1_est),size=3)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = rownames(CPI_CI))) +
geom_point(aes(colour = CI1_est),size=3) + geom_text()
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = rownames(CPI_CI$country))) +
geom_point(aes(colour = CI1_est),size=3) + geom_text()
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = rownames(country))) +
geom_point(aes(colour = CI1_est),size=3) + geom_text()
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = rownames(CPI_CI))) +
geom_point(aes(colour = CI1_est),size=3) + geom_text()
CPI_CI$countries <- countries
CPI_CI$country <- countries
CPI_CI$country <- country
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text()
# Factor analysis
CI2 = ci_factor(data_norm$ci_norm,c(1:11),method="CH", dim=3)
summ = summary(as.data.frame(CI2$ci_factor_est))
CPI_CI <- data.frame(CPI_CI, CI2_est= CI2$ci_factor_est)
print(xtable(summ,caption = "Factor Analysis scores based
on first 11 components",label="tab_factor1"),
include.rownames=FALSE)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI2_est),size=3) + geom_text()
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = factor(CI1_est)))
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = CI1_est))
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = CI1_est), hjust = 0, nudge_x = 0.05)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = CI1_est), hjust = 0.5, nudge_x = 0.05)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = CI1_est), hjust = -0.5, nudge_x = 0.05)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = CI1_est), hjust = -0.25, nudge_x = 0.05, check_overlap = FALSE)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = CI1_est), hjust = -0.25, nudge_x = 0.05, check_overlap = T)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI1_est),size=3) + geom_text(aes(colour = CI1_est), hjust = -0.10, nudge_x = 0.05, check_overlap = T)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI2_est),size=3) + geom_text(aes(colour = CI2_est), hjust = -0.10, nudge_x = 0.05, check_overlap = T)
# Generalized mean
# CI3 = ci_generalized_mean(EU_NUTS1,c(2:3),p=2) # geometric mean
CI3 = ci_generalized_mean(data_norm$ci_norm,c(1:11),p=1) # arithmetic mean
CPI_CI <- data.frame(CPI_CI, CI3_est= CI3$ci_generalized_mean_est)
# Generalized mean
# CI3 = ci_generalized_mean(EU_NUTS1,c(2:3),p=2) # geometric mean
CI3 = ci_generalized_mean(data_norm$ci_norm,c(1:11),p=2) # arithmetic mean
CPI_CI <- data.frame(CPI_CI, CI3_est= CI3$ci_generalized_mean_est)
# Min-Max
CI4 = ci_mean_min(data_norm$ci_norm, alpha=0.5, beta=1)
CPI_CI <- data.frame(CPI_CI, CI4_est= CI4$ci_mean_min_est)
# Weighting method based on geometric aggregation
CI5 = CI_geom_estimated = ci_geom_gen(data_norm$ci_norm,c(1:11),meth = "EQUAL")
summary(CI_geom_estimated$ci_mean_geom_est)
# Mazziotta-Pareto Index (MPI) method
CI6 = ci_mpi(data_norm$ci_norm, penalty="NEG")
summary(as.data.frame(CI6$ci_mpi_est))
# Wroclaw Taxonomic Method
CI7 = ci_wroclaw(data_norm$ci_norm,c(1:2))
summary(as.data.frame(CI7$ci_wroclaw_est))
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI3_est),size=3) + geom_text(aes(colour = CI3_est), hjust = -0.10, nudge_x = 0.05, check_overlap = T)
# Min-Max
CI3 = ci_mean_min(data_norm$ci_norm, alpha=0.5, beta=1)
CPI_CI <- data.frame(CPI_CI, CI3_est= CI3$ci_mean_min_est)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI3_est),size=3) + geom_text(aes(colour = CI3_est), hjust = -0.10, nudge_x = 0.05, check_overlap = T)
rm(list=ls())
library(tidyverse)
library(foreign)
library(dplyr)
library(Compind)
library(xtable)
library(ggplot2)
library(GGally)
library(Hmisc)
library(ggcorrplot)
# -------------- DATA IMPORT
CPI <- readRDS("../../data/data_for_modelling/CPI_2020.rds") %>%
filter(country != "North Korea") # remove North Korea for now because of missing information
# Standard z-scores normalisation with restricted number of indicators
data_norm = normalise_ci(CPI,c(3, 5, 6:14),c("POS","POS","NEG","POS","POS","POS","POS","POS","POS","POS","POS"),method=1,z.mean=0, z.std=1)
summary(data_norm$ci_norm)
# Min-Max
CI3 = ci_mean_min(data_norm$ci_norm, alpha=0.5, beta=1)
CPI_CI <- data.frame(CPI_CI, CI3_est= CI3$ci_mean_min_est)
# Standard z-scores normalisation with restricted number of indicators
data_norm = normalise_ci(CPI,c(3, 5, 6:14),c("POS","POS","NEG","POS","POS","POS","POS","POS","POS","POS","POS"),method=1,z.mean=0, z.std=1)
summary(data_norm$ci_norm)
# Min-Max
CI3 = ci_mean_min(data_norm$ci_norm, alpha=0.5, beta=1)
CPI_CI <- data.frame(CPI_CI, CI3_est= CI3$ci_mean_min_est)
# Benefit of the Doubt approach
CI1 = ci_bod(data_norm$ci_norm,c(1:11))
CPI_CI = data.frame(CPI, CI1_est= CI1$ci_bod_est)
# Factor analysis
CI2 = ci_factor(data_norm$ci_norm,c(1:11),method="CH", dim=3)
summ = summary(as.data.frame(CI2$ci_factor_est))
CPI_CI <- data.frame(CPI_CI, CI2_est= CI2$ci_factor_est)
# Min-Max
CI3 = ci_mean_min(data_norm$ci_norm, alpha=0.5, beta=1)
CPI_CI <- data.frame(CPI_CI, CI3_est= CI3$ci_mean_min_est)
View(CPI_CI)
ggplot(data = CPI_CI, aes(x = skilled_employees, y = tech_exports, label = CPI_CI$country)) +
geom_point(aes(colour = CI3_est),size=3) + geom_text(aes(colour = CI3_est), hjust = -0.10, nudge_x = 0.05, check_overlap = T)
glimpse(CPI_CI)
ggcorr(CPI_CI[, "GDPexp_capita", "CI1_est"], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggcorr(CPI_CI[, "GDPexp_capita" "CI1_est"], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggcorr(CPI_CI[, GDPexp_capita CI1_est], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggcorr(CPI_CI[, c(GDPexp_capita, CI1_est)], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggxcorr(CPI_CI[, c("GDPexp_capita", "CI1_est")], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggcorr(CPI_CI[, c("GDPexp_capita", "CI1_est")], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggcorr(CPI_CI[, c("GDPexp_capita", "CI1_est", "itu_2018", "CI1_est", "CI2_est", "CI3_est")], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
ggcorr(CPI_CI[, c("GDPexp_capita","itu_2018", "CI1_est", "CI2_est", "CI3_est")], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
knitr::opts_chunk$set(echo = TRUE)
# --- 0. Setup
# install.packages("GGally")
library(tidyverse)
library(foreign)
library(dplyr)
library(Compind)
library(xtable)
library(ggplot2)
library(GGally)
library(Hmisc)
library(ggcorrplot)
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
summary(CPI.cor)
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
summary(CPI.rcorr)
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
summary(CPI.coeff)
knitr::opts_chunk$set(echo = TRUE)
# --- 0. Setup
# install.packages("GGally")
library(tidyverse)
library(foreign)
library(dplyr)
library(Compind)
library(xtable)
library(ggplot2)
library(GGally)
library(Hmisc)
library(ggcorrplot)
library(knitr)
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
# summary(CPI.coeff)
kable(CPI.cor)
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
# summary(CPI.coeff)
kable(CPI.cor [, 1:12])
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
# summary(CPI.coeff)
kable(CPI.cor [1:14,])
View(CPI)
# knitr::opts_chunk$set(dev = 'pdf')
knitr::opts_chunk$set(echo = TRUE)
# --- 0. Setup
# install.packages("GGally")
library(tidyverse)
library(foreign)
library(dplyr)
library(Compind)
library(xtable)
library(ggplot2)
library(GGally)
library(Hmisc)
library(ggcorrplot)
library(knitr)
CPI.cor <- cor(CPI[, -1], method = c("pearson"))
CPI.rcorr <- rcorr(as.matrix(CPI[, -1]), type = c("pearson"))
CPI.coeff = CPI.rcorr$r
CPI.p = CPI.rcorr$P
# summary(CPI.coeff)
kable(CPI.cor [1:14,1:14], digits = 2)
ggcorr(CPI[, -1], method = c("pairwise", "pearson"), label=T, hjust = 0.75, size = 3, color = "grey50")
